
- name: "{{ inventory_hostname }} | update apt cache"
  ansible.builtin.apt:
    update_cache: yes

- name: "{{ inventory_hostname }} | install debian packages"
  ansible.builtin.apt:
    pkg: "{{ debian_packages }}"
    state: present

- name: "{{ inventory_hostname }} | add {{ ansible_user }} to docker group"
  ansible.builtin.user:
    name: "{{ ansible_user }}"
    groups: docker
    append: yes

- name: "{{ inventory_hostname }} | disable default DNSStubListener in systemd-resolved"
  ansible.builtin.lineinfile:
    path: /etc/systemd/resolved.conf
    line: DNSStubListener=no
    create: yes
    regexp: '^#?DNSStubListener=' 
  notify: restart systemd-resolved

- name: "{{ inventory_hostname }} | Restart systemd-resolved service"
  ansible.builtin.systemd_service:
    state: restarted
    daemon_reload: true
    name: systemd-resolved.service

- name: "{{ inventory_hostname }} | create bind9 directories"
  ansible.builtin.file:
    path: "{{ bind9_base_dir }}/{{ item }}"
    state: directory
    owner: "{{ ansible_user }}" 
    group: "{{ ansible_user }}" 
    mode: '0755'
    recurse: yes 
  loop:
    - config
    - cache
    - records

- name: "{{ inventory_hostname }} | copy bind9 docker compose file"
  ansible.builtin.template:
    src: docker-compose-bind9.yml.j2
    dest: "{{ bind9_base_dir }}/{{ docker_compose_file_name }}"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0644'
  notify: start or restart docker bind9 container

- name: "{{ inventory_hostname }} | copy bind9 configuration files"
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ bind9_base_dir }}/config/{{ item.dest }}"
    owner: "{{ ansible_user }}" 
    group: "{{ ansible_user }}"
    mode: '0644'
  loop:
    - { src: bind9_named.conf.j2, dest: "{{ named_conf_file_name }}" }
    - { src: bensemer-name.zone.j2, dest: "{{ forward_zone_file_name }}" }
  notify: start or restart docker bind9 container

#- name: "{{ inventory_hostname }} | ensure docker bind9 service is up"
#  community.docker.docker_compose:
#    project_src: "{{ bind9_base_dir }}"
#    state: present # ensures the service is created and running
